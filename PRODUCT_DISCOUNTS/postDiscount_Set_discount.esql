

CREATE COMPUTE MODULE postDiscount_Set_discount
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CreateMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CreateMessage() BEGIN	
		
		DECLARE insertQuery CHARACTER;	
		DECLARE productId CHARACTER CAST(Environment.Variables.Data.Discount.productId AS INTEGER);
		DECLARE dateFrom CHARACTER Environment.Variables.Data.Discount.dateFrom ;
		DECLARE dateTo CHARACTER Environment.Variables.Data.Discount.dateTo;
		DECLARE discount CHARACTER CAST(Environment.Variables.Data.Discount.discount AS DECIMAL);
	
		SET insertQuery = 'INSERT INTO product_discount (productId, datefrom, dateto, discount) VALUES (' 
		|| productId || ', ' || '''' || dateFrom || '''' || ', ' || '''' || dateTo || '''' || ', ' || discount || ');';
		
		SET Environment.Variables.InsertStatus = PASSTHRU(insertQuery);
		IF Environment.Variables.InsertStatus IS NULL THEN
			SET OutputRoot.JSON.Data.response.status = 'CREATED';
			SET OutputRoot.JSON.Data.response.code = '201';	
			SET OutputRoot.JSON.Data.response.error = 'Data successfully inserted into database';
		ELSE
			SET OutputRoot.JSON.Data.response.status = 'Internal Error';
			SET OutputRoot.JSON.Data.response.code = '500';		
			SET OutputRoot.JSON.Data.response.error = 'Could not insert data to database';	
		END IF;	
	END;
	
END MODULE;