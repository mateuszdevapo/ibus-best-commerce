

CREATE COMPUTE MODULE getProduct_get_fixed_price
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();	
		CALL CalculatePrice();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CalculatePrice() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		DECLARE currentDate DATE CURRENT_DATE;
		
		
		SET OutputRoot = InputRoot;

		SET J = CARDINALITY(Environment.Variables.Data.products[]);	

		FOR product AS Environment.Variables.Data.products[] DO
			SET OutputRoot.JSON.Data.product = product;
			FOR productDiscount AS Environment.Variables.Data.Discounts[] DO
				DECLARE unitPrice  DECIMAL;
				DECLARE discountedPrice DECIMAL;
	
				DECLARE dateFrom DATE CAST(productDiscount.datefrom AS DATE);
				DECLARE dateTo DATE CAST(productDiscount.dateto AS DATE);
				
				DECLARE discount DECIMAL CAST(productDiscount.discount AS DECIMAL DEFAULT 0.0);
				SET unitPrice = product.unitprice;
				SET discountedPrice = unitPrice - (unitPrice * (discount / 100));
				
				SET OutputRoot.JSON.Data.product.unitprice = ROUND(discountedPrice, 2);
			END FOR;
		END FOR;		
	END;


END MODULE;